{
  "hash": "a2e5a497aa1fa1057edef2437126d27e",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Tree instance segmentation using airborne images and LiDAR point clouds\ndate: today\nauthor:\n  - name: Alexandre Bry\n    email: alexandre.bry.21@polytechnique.org\n    affiliation:\n      - name: École polytechnique\n        deparment: Département d'informatique\n        city: Palaiseau\n        country: France\n        url: https://portail.polytechnique.edu/informatique/fr/page-daccueil\n      - name: Geodan B.V.\n        department: Research\n        city: Amsterdam\n        country: Netherlands\n        url: https://research.geodan.nl/\n    roles: writing\n    corresponding: true\nabstract: |\n  This is the abstract.\n  It can be on multiple lines and containing **Markdown**.\nkeywords: \n  - tree detection\n  - deep learning\nbibliography: references.bib\n---\n\n\n\n\n\nOn m'appelle l'OVNI.\n\n## Introduction\n\nThe goal of the internship was to study the possibility of combining LiDAR point clouds and aerial images in a deep learning model to perform instance segmentation of trees. The two types of data are indeed complementary, as point clouds capture the shape of the worlds, while images capture the colors. However, combining them into a format that allows a model to handle them simultaneously is not an easy task because they inherently have a very different spatial repartition and encoding.\n\n\n\n## State-of-the-art\n\n::: {.cell execution_count=1}\n``` {.python .cell-code .hidden}\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(\n  subplot_kw = {'projection': 'polar'} \n)\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![A line plot on a polar axis](index_files/figure-docx/fig-polar-output-1.png){#fig-polar}\n:::\n:::\n\n\n:::{#e6aaa1bd .cell .markdown}\n### Datasets\n\n### Models\n\n## The dataset\n\n## The model\n\n## Results\n\n## Conclusion\n:::\n\n",
    "supporting": [
      "index_files/figure-docx"
    ],
    "filters": []
  }
}